---
import Logo from '../components/Logo.astro';

const navItems = [
    { linkText: 'Projects', href: '/#projects' },
    { linkText: 'Blog', href: '/#blog' }
];
---

<nav class="flex flex-wrap items-center gap-4 p-3 mb-14 justify-between sticky top-0 z-50 bg-[var(--color-surface)]/80 backdrop-blur-md font-mono rounded-b-xl">
    <a class="no-underline" href="/">
        <Logo />
    </a>
    {
        !!navItems?.length && (
            <ul class="flex flex-wrap gap-x-4 gap-y-1" id="nav-list">
                {navItems.map((item) => (
                    <li class="list-none">
                        <a href={item.href} class="inline-block no-underline p-3 bg-[var(--color-primary)]/80 rounded-lg shadow-lg">
                            {item.linkText}
                        </a>
                    </li>
                ))}
                <li class="list-none">
                  <button id="theme-toggle" aria-label="Toggle dark/light mode"
                    class="inline-block p-3 bg-[var(--color-primary)]/80 rounded-lg shadow-lg">
                    🌙 Dark
                  </button>
                </li>
            </ul>
        )
    }
</nav>

<script>
  // Immediately run to set initial state
  (function() {
    const root = document.documentElement;
    const btn = document.getElementById('theme-toggle');
    if (!btn) return;

    const savedTheme = localStorage.getItem('theme');
    let isDark = savedTheme !== 'light';

    function updateButton() {
      btn.textContent = isDark ? '🌙 Dark' : '☀️ Light';
    }

    function updateTheme() {
      if (isDark) {
        root.classList.remove('light-mode');
      } else {
        root.classList.add('light-mode');
      }
      updateButton();
    }

    btn.addEventListener('click', () => {
      isDark = !isDark;
      localStorage.setItem('theme', isDark ? 'dark' : 'light');
      updateTheme();
    });

    updateTheme();
  })();
</script>

<style>
    a {
        position: relative;
        font-family: 'Orbitron', sans-serif;
        transition: filter 0.3s ease;

    }
    a:hover {
        filter: brightness(1.4);
    }

    /* This ::before is the animated underline on hover */
    a::before {
        content: '';
        position: absolute;
        left: 0;
        bottom: -2px;
        width: 100%;
        height: 2px;
        background: var(--color-accent);
        transform: scaleX(0);
        transition: transform 0.3s cubic-bezier(0, 0, 0, 1.07); /* great tool to make this in chrome dev tools */
    }
    a:hover::before {
        transform: scaleX(0.8);
    }
</style>
